#knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(prompt = TRUE)
#hook1 <- function(x){ gsub("```\n*```r*\n*", "", x) }
# These lines improve formatting of output by removing blank space
hook2 <- function(x){ gsub("```\n+```\n", "", x) }
knitr::knit_hooks$set(document = hook2)
# Preparation
rm(list=ls())
setwd("C:/Users/Winnie/Desktop/240A_Metrics/hw1")
setwd("~/PhD TextBooks and Coursework/ECN240A")
# Load Data
#"https://www.ssc.wisc.edu/~bhansen/econometrics/cps09mar.txt"
cps <- read_tsv("~/PhD TextBooks and Coursework/ECN240A/cps09mar.txt",  col_names=c("age","female","hisp","education","earnings","hours","week","union","uncov","region","race","marital"))
# Preparation
rm(list=ls())
#setwd("C:/Users/Winnie/Desktop/240A_Metrics/hw1")
library("tidyverse","dplyr")
# Load Data
#"https://www.ssc.wisc.edu/~bhansen/econometrics/cps09mar.txt"
cps <- read_tsv("~/PhD TextBooks and Coursework/ECN240A/cps09mar.txt",  col_names=c("age","female","hisp","education","earnings","hours","week","union","uncov","region","race","marital"))
#knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(prompt = TRUE)
#hook1 <- function(x){ gsub("```\n*```r*\n*", "", x) }
# These lines improve formatting of output by removing blank space
hook2 <- function(x){ gsub("```\n+```\n", "", x) }
knitr::knit_hooks$set(document = hook2)
# Preparation
rm(list=ls())
#setwd("C:/Users/Winnie/Desktop/240A_Metrics/hw1")
library("tidyverse","dplyr")
# Load Data
#"https://www.ssc.wisc.edu/~bhansen/econometrics/cps09mar.txt"
cps <- read_tsv("~/PhD TextBooks and Coursework/ECN240A/cps09mar.txt",  col_names=c("age","female","hisp","education","earnings","hours","week","union","uncov","region","race","marital"))
class(cps)
# generate ln(hourly earnings) and add it to the matrix
cps <- mutate(cps,l_earnings=log(earnings/(hours*week)))
# regression1
reg1 <- lm(formula=l_earnings~education, data=cps)
reg1
# regression2
reg2 <- lm(formula=l_earnings~education+hisp, data=cps)
reg2
res1 <- reg1$residuals
res2 <- reg2$residuals
class(reg1$residuals)
class(reg2$residuals)
# generate matrixes
y <- as.matrix(select(cps, l_earnings))
samplesize <- length(y)
const <- matrix(1,ncol = 1, nrow = samplesize) #include constant term
x1 <- cbind(const,as.matrix(select(cps, education)))
x2 <- cbind(const,as.matrix(select(cps, education, hisp)))
# calculate
myreg1 <- solve(t(x1)%*%x1/samplesize)%*%(t(x1)%*%y/samplesize)
myreg2 <- solve(t(x2)%*%x2/samplesize)%*%(t(x2)%*%y/samplesize)
rownames(myreg1) <- c("(Intercept)", "education")
rownames(myreg2) <- c("(Intercept)", "education","hisp")
myreg1
myreg2
coeff_reg1 <- reg1$coefficients
coeff_myreg1 <- myreg1[,1]
all.equal(coeff_reg1, coeff_myreg1,tolerance=0.00001)
coeff_reg2 <- reg2$coefficients
coeff_myreg2 <- myreg2[,1]
all.equal(coeff_reg2, coeff_myreg2,tolerance=0.00001)
res1 <- as.vector(reg1$residuals)
res2 <- as.vector(reg2$residuals)
myres1 <- y-x1%*%myreg1
myres2 <- y-x2%*%myreg2
all.equal(myres1[,1],res1,tolerance=0.00001)
all.equal(myres2[,1],res2,tolerance=0.00001)
m1 <- as.matrix(rep(0,2)) #2*1 vector
xe1 <- t(x1)%*%myres1
all.equal(m1[,1],xe1[,1],tolerance=0.00001,check.names=F)
m2 <- as.matrix(rep(0,3)) #3*1 vector
xe2 <- t(x2)%*%myres2
all.equal(m2[,1],xe2[,1],tolerance=0.00001, check.names=F)
selectsize <- 500
rcps <- cps[sample(nrow(cps), selectsize), ]
rx1 <- cbind(matrix(1,ncol = 1, nrow = nrow(rcps)),
as.matrix(select(rcps, education)))
rx2 <- cbind(matrix(1,ncol = 1, nrow = nrow(rcps)),
as.matrix(select(rcps, education, hisp)))
P1 <- rx1%*%solve(t(rx1)%*%rx1)%*%t(rx1)
P2 <- rx2%*%solve(t(rx2)%*%rx2)%*%t(rx2)
px1 <- P1%*%rx1
all.equal(px1,rx1,tolerance=0.00001)
px2 <- P2%*%rx2
all.equal(px2,rx2,tolerance=0.00001)
P12 <- P1%*%P1
P22 <- P2%*%P2
all.equal(P12,P1,tolerance=0.00001)
all.equal(P22,P2,tolerance=0.00001)
M1 <- diag(selectsize) - P1
M2 <- diag(selectsize) - P2
m1 <- matrix(0,selectsize,ncol(rx1)) # zero matrix
mx1 <- M1%*%rx1
dimnames(mx1) <- NULL
all.equal(m1,mx1,tolerance=0.00001, check.names=F)
m2 <- matrix(0,selectsize,ncol(rx2)) # zero matrix
mx2 <- M2%*%rx2
dimnames(mx2) <- NULL
all.equal(m2,mx2,tolerance=0.00001)
