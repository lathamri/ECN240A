sim_func('N01', 100)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
pop_beta = cov(x,y)/var(x)
return(pop_beta)
}
sim_func(100, 'N01', 100)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = tibble(x = dist_list[[pop_dist]](n),
err = rnorm(n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
pop_beta = cov(x,y)/var(x)
return(pop_beta)
}
sim_func(100, 'N01', 100)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
pop_beta = cov(x,y)/var(x)
return(pop_beta)
}
sim_func(100, 'N01', 100)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
}
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
return(results)
}
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
return(results)
}
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), dist_sim = c("N01", "N31", "N03"))
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), dist_sim = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
gc()
#knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(prompt = TRUE)
#hook1 <- function(x){ gsub("```\n*```r*\n*", "", x) }
# These lines improve formatting of output by removing blank space
hook2 <- function(x){ gsub("```\n+```\n", "", x) }
knitr::knit_hooks$set(document = hook2)
library(tidyverse, dplyr)
set.seed(42)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, pop_dist, n){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), dist_sim = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat = df(x = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=x+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$x, y=df$y)/var(x=df$x))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat = df(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$xx, y=df$y)/var(x=df$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
sim_func = function(rep, n, pop_dist){
dat = tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$xx, y=df$y)/var(x=df$xx))
return(results)
}
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat = tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg = lm(y~x, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$xx, y=df$y)/var(x=df$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat = tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg = lm(y~xx, data=dat)
results = list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$xx, y=df$y)/var(x=df$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm =coefficients(reg)[2], beta_an = cov(x=df$xx, y=df$y)/var(x=df$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm =coefficients(reg)[2])
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
View(sim_out)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(df$xx,df$y))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=df$xx,y=df$y))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], cov = cov(x=df$xx,y=df$y))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=dat$xx, y=dat$y)/var(x=dat$x))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=dat$xx, y=dat$y)/var(x=dat$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=dat$xx, y=dat$y)/var(x=dat$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
sim_print <- group_by(sim_out,n,dist_sim) %>%
mutate(mean_beta=mean(beta)) %>%
ungroup() %>%
select(n,dist_sim,mean_beta) %>%
distinct() %>%
pivot_wider(names_from=dist_sim, values_from=mean_beta)
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=dat$xx, y=dat$y)/var(x=dat$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
sim_print <- group_by(sim_out,n,pop_dist) %>%
mutate(mean_beta=mean(beta)) %>%
ungroup() %>%
select(n,pop_dist,mean_beta) %>%
distinct() %>%
pivot_wider(names_from=pop_dist, values_from=mean_beta)
sim_print
dist_list = list(N01 = function(n) rlnorm(n,0,1),
N31 = function(n) rlnorm(n,3,1),
N03 = function(n) rlnorm(n,0,3))
sim_func = function(rep, n, pop_dist){
dat <- tibble(xx = dist_list[[pop_dist]](n),
err = rnorm(n=n,0,1),
y=xx+err)
reg <- lm(y~xx, data=dat)
results <- list(beta_lm = coefficients(reg)[2], beta_ana = cov(x=dat$xx, y=dat$y)/var(x=dat$xx))
return(results)
}
num_reps=1000
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), pop_dist = c("N01", "N31", "N03"))
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
unnest_wider(results)
sim_print <- group_by(sim_out,n,pop_dist) %>%
mutate(mean_beta=mean(beta_lm)) %>%
ungroup() %>%
select(n,pop_dist,mean_beta) %>%
distinct() %>%
pivot_wider(names_from=pop_dist, values_from=mean_beta)
sim_print
library(tidyverse, dplyr, sandwich)
set.seed(42)
n0 = zeros(100)
n0 = zeroes(100)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0,n1)
View(n1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, 1, n1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, 1, n1[1])
View(n)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, n[1], 1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, n1[1], 1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, n1, 1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = sample(n0)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = sample(n0, 10)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = index(sample(n0, 10))
n0 = rep(0, 100)
n1 = list(3,10,25)
n = idx(sample(n0, 10))
n0 = rep(0, 100)
n1 = list(3,10,25)
n = match(sample(n0, 10))
n0 = rep(0, 100)
n1 = list(3,10,25)
n = match(0, sample(n0, 10))
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, match(0, sample(n0, 10)), 1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, match(0, sample(n0, 3)), 1)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, match(0, sample(n0,3)), 3)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, list(1,2,3), 1)
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, match(0, sample(n0,3)), 1)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, match(c(1:3), sample(n0,3)), 1)
n
match(c(1:3), sample(n0,3))
match(0, sample(n0,3))
match(0, sample(n0,3))
n0 = rep(0, 100)
n1 = list(3,10,25)
n = replace(n0, 1, 1)
n
n = replace(n0, 2, 1)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index) {
for (i in c(1:index)) {
n = replace(n0, index[i], 1)
}
}
n = replace(n0, 2, 1)
n
replace_func(3)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index) {
for (i in 1:index) {
n = replace(n0, i, 1)
}
}
replace_func(3)
n
n = replace(n0, 2, 1)
n
replace_func(3)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index) {
for (i in 1:index) {
n = replace(n0, i, 1)
}
return(n)
}
replace_func(3)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index) {
for (i in 1:index) {
n = replace(n0, i, 1)
}
return(n)
}
replace_func(3)
n
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index, n) {
for (i in 1:index) {
n = replace(n, i, 1)
}
return(n)
}
replace_func(3)
n0 = rep(0, 100)
n1 = list(3,10,25)
replace_func = function(index, n) {
for (i in 1:index) {
n = replace(n, i, 1)
}
return(n)
}
replace_func(3, n0)
n
n0 = rep(0, 100)
# takes in an amount to replace labeled index and a starting list, in this case as vector of 100 zeros.
# recursively applies the replace function to get our new list of sparse dummy variables.
replace_func = function(index, n) {
for (i in 1:index) {
n = replace(n, i, 1)
}
return(n)
}
# Instantiate omega and n1 values
omega = list(1,2)
n1 = list(3,10,25)
