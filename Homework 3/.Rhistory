# Function Builds
sim_func = function(reps,n,distro) {
dgp = tibble(err = dist_list[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2], dgp))
}
## Run simulation
sim_out = param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print = group_by(sim_out,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
p = sim_out %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
p
rm(list=ls())    # clear memory
library(sandwich)
library(tidyverse)
library(broom)
set.seed(2022)
#setwd("C:/Users/holmc_000/Documents/0My Docs/0UC Davis/240A")
#simulations for 1 and 2
## number of repetitions
num_reps<-1000
## Define a simulation function
sim_func <- function(rep,n,dist_sim){
df <- tibble(err = dist_list[[dist_sim]](n),
xx = rnorm(n=n,0,1),
Y = 0.9 + 0.5*xx + err)
reg <- lm(Y~xx, data=df)
results <- list(beta=coefficients(reg)[2], SDB = sqrt(vcovHC(reg, omega = rep(1, n))[2,2]))  # extract the slope coefficient from each simulation
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), dist_sim = c("iidN", "iidC"))
## Define list of distributions to use in simulation function
dist_list = list(iidN = function(n) rnorm(n=n,0,1),
iidC = function(n) rcauchy(n=n,0,1))
## Run simulation
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
mutate(log10n=log10(n)) %>%
unnest_wider(results)
#create table
sim_print_msd <- group_by(sim_out,n,dist_sim) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,dist_sim,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=dist_sim, values_from=c(mean_beta,sd_beta))
#QUESTION 1
# true value of beta is clearly 0.5
#for normal mean = median = mode
# make table of mean, sd of beta for iidN
sim_print_nsum <- group_by(sim_out,n,dist_sim) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,dist_sim,mean_beta,sd_beta) %>%
distinct() %>%
filter(dist_sim == "iidN") %>%
pivot_wider(values_from=c(mean_beta,sd_beta))
sim_print_nsum
# show mean of beta hat approaches .5
all.equal(.5, as.numeric(sim_print_nsum[1,3]))
all.equal(.5, as.numeric(sim_print_nsum[2,3]))
all.equal(.5, as.numeric(sim_print_nsum[3,3]))
#calc sqrt(V_beta/n) and show sd_beta approaches this
sdB1= sqrt(1/10)
sdB2= sqrt(1/100)
sdB3= sqrt(1/1000)
#compute normalized differences
(sdB1 - as.numeric(sim_print_nsum[1,4]))/sdB1
(sdB2 - as.numeric(sim_print_nsum[2,4]))/sdB2
(sdB3 - as.numeric(sim_print_nsum[3,4]))/sdB3
# filter beta by iidN, then sort by n
sim_print_n <- group_by(sim_out,n,dist_sim) %>%
select(n,dist_sim,beta) %>%
distinct() %>%
filter(dist_sim == "iidN") #%>%
# pivot_wider(names_from=n, values_from=beta)
sim_print_n <- split(sim_print_n, sim_print_n$n)
sim_print_n
# test for normality for each n
shapiro.test(sim_print_n[["10"]]$beta)
shapiro.test(sim_print_n[["100"]]$beta)
shapiro.test(sim_print_n[["1000"]]$beta)
# for 100,1000 p>0.05, so distribution is normal for high enough n = asymptotic normality
#graph betas for iidN
ylims <- c(-5, 5)
pl_density1 <- sim_out %>%
ggplot(aes(x=beta, fill=log10n, group=n))+
geom_density()+
xlim(ylims)+
facet_grid("iidN" ~ n,scales="free_y",space = "free_y")
pl_density1
p = sim_out %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
p
# Init Variables
set.seed(42)
num_reps=1000
dist_list = list(function(n) rnorm(n),
function(n) rpois(n, 1),
function(n) rchisq(n, 1))
param_list = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Pois", "ChiSq"))
# Function Builds
sim_func = function(reps,n,distro) {
dgp = tibble(err = dist_list[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2], dgp))
}
## Run simulation
sim_out = param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print = group_by(sim_out,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
p = sim_out %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
p
# Add mean line
p+ geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
# Init Variables
set.seed(42)
num_reps=1000
dist_list_2 = list(function(n) rnorm(n),
function(n) rcauchy(n))
param_list_2 = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Cauchy"))
# Function Builds
sim_func_2 = function(reps,n,distro) {
dgp = tibble(err = dist_list_2[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2], stddev = sd(beta)))
}
## Run simulation
sim_out_2 = param_list_2 %>%
mutate(results=pmap(param_list_2,sim_func_2)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
# Init Variables
set.seed(42)
num_reps=1000
dist_list_2 = list(function(n) rnorm(n),
function(n) rcauchy(n))
param_list_2 = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Cauchy"))
# Function Builds
sim_func_2 = function(reps,n,distro) {
dgp = tibble(err = dist_list_2[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2]))
}
## Run simulation
sim_out_2 = param_list_2 %>%
mutate(results=pmap(param_list_2,sim_func_2)) %>%
unnest_wider(results)
sim_print_2 = group_by(sim_out_2,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
sim_print_2
p = sim_out %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p+ geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p+ geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
# Init Variables
set.seed(42)
num_reps=1000
dist_list_2 = list(function(n) rnorm(n),
function(n) rcauchy(n))
param_list_2 = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Cauchy"))
# Function Builds
sim_func_2 = function(reps,n,distro) {
dgp = tibble(err = dist_list_2[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2]))
}
## Run simulation
sim_out_2 = param_list_2 %>%
mutate(results=pmap(param_list_2,sim_func_2)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print_2 = group_by(sim_out_2,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
sim_print_2
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p+ geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
pl_box
rm(list=ls())    # clear memory
library(sandwich)
library(tidyverse)
library(broom)
set.seed(2022)
#setwd("C:/Users/holmc_000/Documents/0My Docs/0UC Davis/240A")
#simulations for 1 and 2
## number of repetitions
num_reps<-1000
## Define a simulation function
sim_func <- function(rep,n,dist_sim){
df <- tibble(err = dist_list[[dist_sim]](n),
xx = rnorm(n=n,0,1),
Y = 0.9 + 0.5*xx + err)
reg <- lm(Y~xx, data=df)
results <- list(beta=coefficients(reg)[2], SDB = sqrt(vcovHC(reg, omega = rep(1, n))[2,2]))  # extract the slope coefficient from each simulation
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(10,100,1000), dist_sim = c("iidN", "iidC"))
## Define list of distributions to use in simulation function
dist_list = list(iidN = function(n) rnorm(n=n,0,1),
iidC = function(n) rcauchy(n=n,0,1))
## Run simulation
sim_out <- param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
mutate(log10n=log10(n)) %>%
unnest_wider(results)
#create table
sim_print_msd <- group_by(sim_out,n,dist_sim) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,dist_sim,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=dist_sim, values_from=c(mean_beta,sd_beta))
#QUESTION 1
# true value of beta is clearly 0.5
#for normal mean = median = mode
# make table of mean, sd of beta for iidN
sim_print_nsum <- group_by(sim_out,n,dist_sim) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,dist_sim,mean_beta,sd_beta) %>%
distinct() %>%
filter(dist_sim == "iidN") %>%
pivot_wider(values_from=c(mean_beta,sd_beta))
sim_print_nsum
# show mean of beta hat approaches .5
all.equal(.5, as.numeric(sim_print_nsum[1,3]))
all.equal(.5, as.numeric(sim_print_nsum[2,3]))
all.equal(.5, as.numeric(sim_print_nsum[3,3]))
#calc sqrt(V_beta/n) and show sd_beta approaches this
sdB1= sqrt(1/10)
sdB2= sqrt(1/100)
sdB3= sqrt(1/1000)
#compute normalized differences
(sdB1 - as.numeric(sim_print_nsum[1,4]))/sdB1
(sdB2 - as.numeric(sim_print_nsum[2,4]))/sdB2
(sdB3 - as.numeric(sim_print_nsum[3,4]))/sdB3
# filter beta by iidN, then sort by n
sim_print_n <- group_by(sim_out,n,dist_sim) %>%
select(n,dist_sim,beta) %>%
distinct() %>%
filter(dist_sim == "iidN") #%>%
# pivot_wider(names_from=n, values_from=beta)
sim_print_n <- split(sim_print_n, sim_print_n$n)
sim_print_n
# test for normality for each n
shapiro.test(sim_print_n[["10"]]$beta)
shapiro.test(sim_print_n[["100"]]$beta)
shapiro.test(sim_print_n[["1000"]]$beta)
# for 100,1000 p>0.05, so distribution is normal for high enough n = asymptotic normality
#graph betas for iidN
ylims <- c(-5, 5)
pl_density1 <- sim_out %>%
ggplot(aes(x=beta, fill=log10n, group=n))+
geom_density()+
xlim(ylims)+
facet_grid("iidN" ~ n,scales="free_y",space = "free_y")
pl_density1
pl_box1 <- sim_out %>%
ggplot(aes(x=log10n, y=beta, fill=log10n, group=n))+
geom_boxplot()+
ylim(ylims)+
facet_grid("iidN" ~ .)
pl_box1
# QUESTION 2
#2.1 table
sim_print_msd
#2.2 graphs
## Make plots of coefficient distributions
#ylims <- c(-5, 5)
pl_box <- sim_out %>%
ggplot(aes(x=log10n, y=beta, fill=log10n, group=n))+
geom_boxplot()+
ylim(ylims)+
facet_grid(dist_sim ~ .)
pl_point <- sim_out %>%
ggplot(aes(x=log10n, y=beta, color=log10n, group=n))+
geom_point()+
geom_jitter(width=.05) +
ylim(ylims)+
facet_grid(dist_sim ~ .)
pl_violin <- sim_out %>%
ggplot(aes(x=log10n, y=beta, fill=log10n, group=n))+
geom_violin()+
ylim(ylims)+
facet_grid(dist_sim ~ .)
pl_density <- sim_out %>%
ggplot(aes(x=beta, fill=log10n, group=n))+
geom_density()+
xlim(ylims)+
facet_grid(dist_sim ~ n,scales="free_y",space = "free_y")
pl_box
pl_point
pl_violin
pl_density
# ##  Density plot of error data
# err_data <- tibble(iidN=rt(1000,5),iidC=rt(1000,20))
# xlims <- c(-5, 5)
# pl_dist_d <- err_data %>%
#   pivot_longer(everything(),names_to="Distribution", values_to="x") %>%
#   ggplot(aes(x=x, group=Distribution, fill=Distribution))+
#   geom_density()+
#   facet_grid(Distribution ~.,scales="free_y",space = "free_y")+
#   xlim(xlims)
# pl_dist_d
#
# ##  Point plot of error data
# pl_dist_p <- err_data %>%
#   pivot_longer(everything(),names_to="Distribution", values_to="x") %>%
#   ggplot(aes(y=x, x=Distribution, color=Distribution))+
#   geom_point()+
#   geom_jitter(width=.05)
# pl_dist_p
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
knitr::opts_chunk$set(echo = TRUE)
library(sandwich)
library(ggplot2)
library(tidyverse)
# Init Variables
set.seed(42)
num_reps=1000
dist_list = list(function(n) rnorm(n),
function(n) rpois(n, 1),
function(n) rchisq(n, 1))
param_list = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Pois", "ChiSq"))
# Function Builds
sim_func = function(reps,n,distro) {
dgp = tibble(err = dist_list[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2], dgp))
}
## Run simulation
sim_out = param_list %>%
mutate(results=pmap(param_list,sim_func)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print = group_by(sim_out,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
p = sim_out %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p+ geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
# Init Variables
set.seed(42)
num_reps=1000
dist_list_2 = list(function(n) rnorm(n),
function(n) rcauchy(n))
param_list_2 = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Cauchy"))
# Function Builds
sim_func_2 = function(reps,n,distro) {
dgp = tibble(err = dist_list_2[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2]))
}
## Run simulation
sim_out_2 = param_list_2 %>%
mutate(results=pmap(param_list_2,sim_func_2)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print_2 = group_by(sim_out_2,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
sim_print_2
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p + geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1)
+ facet_grid(distro~.)
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density()
# Add mean line
p + geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1) + facet_grid(distro~.)
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p + geom_vline(aes(xintercept=mean(beta)),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p + geom_vline(aes(xintercept=0.5,
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
p = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
p_den= sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
p_vio = sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_violin() +
xlim(c(-5,5)) +
facet_grid(distro~.)
p_vio
p_vio = sim_out_2 %>%
ggplot(aes(x=sqrtn, y=beta, fill=sqrtn, group=n)) +
geom_violin() +
xlim(c(-5,5)) +
facet_grid(distro~.)
p_vio
p_vio = sim_out_2 %>%
ggplot(aes(x=sqrtn, y=beta, fill=sqrtn, group=n)) +
geom_violin() +
ylim(c(-5,5)) +
facet_grid(distro~.)
p_vio
p_den= sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
p_vio = sim_out_2 %>%
ggplot(aes(x=sqrtn, y=beta, fill=sqrtn, group=n)) +
geom_violin() +
ylim(c(-5,5)) +
facet_grid(distro~.)
p_vio
