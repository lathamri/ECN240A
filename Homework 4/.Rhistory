for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', dummy, '+', interaction_term, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg = lm(formula, data=SASS_CCD_long)
stargazer(pay_reg, type='latex', keep=c('StrongUnion', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F)
View(pay_reg)
plot(SASS_CCD_long$UnionStrength, SASS_CCD_long$CCDIDLEA)
plot(SASS_CCD_long$UnionStrength, SASS_CCD_long$NumSchools)
plot(SASS_CCD_long$UnionStrength, SASS_CCD_long$NumSchools[SASS_CCD_long$NumSchools<200])
plot(SASS_CCD_long$UnionStrength[SASS_CCD_long$NumSchools<200], SASS_CCD_long$NumSchools[SASS_CCD_long$NumSchools<200])
plot(SASS_CCD_long$UnionStrength[SASS_CCD_long$NumSchools<50], SASS_CCD_long$NumSchools[SASS_CCD_long$NumSchools<50])
# DEFINE FORUMLA STUFF
regressors = c('log(BA.NoExp)~', 'log(BA.10yrs)~', 'log(MS.NoExp)~', 'log(MS.30Cr)~', 'log(MS.20yrs)~')
student_vec = paste(c('HispanicStudents', 'WhiteStudents', 'BlackStudents', 'AmericanIndianStudents', 'AsianStudents', 'EligFreeLunchK.12', 'TotalEnrollment', 'PercStudEligLunchDisc'), collapse='+')
district_vec = paste(c('NumSchools', 'NumContinueTeachers', 'CoreExpendPerPupil', 'CurrExpendPerPupil', 'PercExpendInstruction', 'PercRevFederal', 'PercRevState', 'PercRevLocal', 'DistrictTotExpend', 'HispanicTeachers', 'WhiteTeachers', 'BlackTeachers', 'AmericanIndianTeachers', 'AsianTeachers', 'BenefitRateTeacher'), collapse='+')
community_vec = paste(c('REGION', 'STATE', 'RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
partial_community_vec = paste(c('RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
# ADD STUFF TO DF
SASS_CCD$UnionStrength = ifelse(SASS_CCD$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD$StateUnionRank)+1/2*(SASS_CCD$TCURINST +
SASS_CCD$TCAPOUT + SASS_CCD$TotalEmployeeBenefits)/SASS_CCD$TOTALEXP, 0)
SASS_CCD$StrongUnion = ifelse(SASS_CCD$UnionStrength > median(SASS_CCD$UnionStrength[which(SASS_CCD$UnionStrength != 0)]), 1, 0)
UnionStrength = paste(c('StrongUnion'), collapse='+')
Unionized = paste(c('UnionAgreement'), collapse="+")
# MAKE MODELS
full_lm_reg = c()
full_lm_sum = c()
full_lm_coef = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', dummy, '+', interaction_term, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg = lm(formula, data=SASS_CCD_long)
stargazer(pay_reg, type='latex', keep=c('StrongUnion', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F)
stargazer(pay_reg_none, pay_reg_some, pay_reg_all, type='latex', keep=c('StrongUnion', 'ExpAndEduc', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F)
# DEFINE FORUMLA STUFF
regressors = c('log(BA.NoExp)~', 'log(BA.10yrs)~', 'log(MS.NoExp)~', 'log(MS.30Cr)~', 'log(MS.20yrs)~')
student_vec = paste(c('HispanicStudents', 'WhiteStudents', 'BlackStudents', 'AmericanIndianStudents', 'AsianStudents', 'EligFreeLunchK.12', 'TotalEnrollment', 'PercStudEligLunchDisc'), collapse='+')
district_vec = paste(c('NumSchools', 'NumContinueTeachers', 'CoreExpendPerPupil', 'CurrExpendPerPupil', 'PercExpendInstruction', 'PercRevFederal', 'PercRevState', 'PercRevLocal', 'DistrictTotExpend', 'HispanicTeachers', 'WhiteTeachers', 'BlackTeachers', 'AmericanIndianTeachers', 'AsianTeachers', 'BenefitRateTeacher'), collapse='+')
community_vec = paste(c('REGION', 'STATE', 'RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
partial_community_vec = paste(c('RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
# ADD STUFF TO DF
SASS_CCD$UnionStrength = ifelse(SASS_CCD$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD$StateUnionRank)+1/2*(SASS_CCD$TCURINST +
SASS_CCD$TCAPOUT + SASS_CCD$TotalEmployeeBenefits)/SASS_CCD$TOTALEXP, 0)
SASS_CCD$StrongUnion = ifelse(SASS_CCD$UnionStrength > median(SASS_CCD$UnionStrength[which(SASS_CCD$UnionStrength != 0)]), 1, 0)
UnionStrength = paste(c('StrongUnion'), collapse='+')
Unionized = paste(c('UnionAgreement'), collapse="+")
# MAKE MODELS
full_lm_reg = c()
full_lm_sum = c()
full_lm_coef = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_none = lm(forumla, data=SASS_CCD_long)
# DEFINE FORUMLA STUFF
regressors = c('log(BA.NoExp)~', 'log(BA.10yrs)~', 'log(MS.NoExp)~', 'log(MS.30Cr)~', 'log(MS.20yrs)~')
student_vec = paste(c('HispanicStudents', 'WhiteStudents', 'BlackStudents', 'AmericanIndianStudents', 'AsianStudents', 'EligFreeLunchK.12', 'TotalEnrollment', 'PercStudEligLunchDisc'), collapse='+')
district_vec = paste(c('NumSchools', 'NumContinueTeachers', 'CoreExpendPerPupil', 'CurrExpendPerPupil', 'PercExpendInstruction', 'PercRevFederal', 'PercRevState', 'PercRevLocal', 'DistrictTotExpend', 'HispanicTeachers', 'WhiteTeachers', 'BlackTeachers', 'AmericanIndianTeachers', 'AsianTeachers', 'BenefitRateTeacher'), collapse='+')
community_vec = paste(c('REGION', 'STATE', 'RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
partial_community_vec = paste(c('RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
# ADD STUFF TO DF
SASS_CCD$UnionStrength = ifelse(SASS_CCD$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD$StateUnionRank)+1/2*(SASS_CCD$TCURINST +
SASS_CCD$TCAPOUT + SASS_CCD$TotalEmployeeBenefits)/SASS_CCD$TOTALEXP, 0)
SASS_CCD$StrongUnion = ifelse(SASS_CCD$UnionStrength > median(SASS_CCD$UnionStrength[which(SASS_CCD$UnionStrength != 0)]), 1, 0)
UnionStrength = paste(c('StrongUnion'), collapse='+')
Unionized = paste(c('UnionAgreement'), collapse="+")
# MAKE MODELS
full_lm_reg = c()
full_lm_sum = c()
full_lm_coef = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_none = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_some = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', interaction_term, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_all = lm(formula, data=SASS_CCD_long)
stargazer(pay_reg_none, pay_reg_some, pay_reg_all, type='latex', keep=c('StrongUnion', 'ExpAndEduc', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F)
stargazer(pay_reg_none, pay_reg_some, pay_reg_all, type='latex', keep=c('StrongUnion', 'ExpAndEduc', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F, order=c(5, 1,2,3,4,6,7,8,9))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(stargazer)
library(dplyr)
library(tidyr)
SASS = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/SASS data/Clean_SASS.csv')
CCD = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/Common Core data/Clean_CCD.csv')
SASS_CCD = merge(SASS, CCD, by.x="CCDIDLEA", by.y="LEAID")
SASS_CCD$StateUnionRank = NULL
tier_1 = c('HAWAII', 'OREGON', 'MONTANA', 'PENNSYLVANIA', 'RHODE ISLAND', 'CALIFORNIA', 'NEW JERSEY', 'ILLINOIS', 'NEW YORK', 'WASHINGTON')
tier_2 = c('VERMONT', 'OHIO', 'WEST VIRGINIA', 'MINNESOTA', 'ALASKA', 'MICHIGAN', 'CONNECTICUT', 'WISCONSIN', 'DELAWARE', 'ALABAMA')
tier_3 = c('MASSACHUSETTS', 'MAINE', 'MARYLAND', 'NORTH DAKOTA', 'NEVADA', 'NEBRASKA', 'IOWA', 'KENTUCKY', 'WYOMING', 'NEW HAMPSHIRE', 'INDIANA')
tier_4 = c('KANSAS', 'DISTRICT OF COLUMBIA', 'SOUTH DAKOTA', 'COLORADO', 'IDAHO', 'NEW MEXICO', 'MISSOURI', 'UTAH', 'NORTH CAROLINA', 'TENNESSEE')
tier_5 = c('LOUISIANA', 'OKLAHOMA', 'TEXAS', 'GEORGIA', 'MISSISSIPPI', 'VIRGINIA', 'ARKANSAS', 'SOUTH CAROLINA', 'FLORIDA', 'ARIZONA')
SASS_CCD$StateUnionRank[SASS_CCD$STNAME %in% tier_1] = 1
SASS_CCD$StateUnionRank[SASS_CCD$STNAME %in% tier_2] = 2
SASS_CCD$StateUnionRank[SASS_CCD$STNAME %in% tier_3] = 3
SASS_CCD$StateUnionRank[SASS_CCD$STNAME %in% tier_4] = 5
SASS_CCD$StateUnionRank[SASS_CCD$STNAME %in% tier_5] = 5
SASS_CCD = SASS_CCD[!(SASS_CCD$UnionAgreement==2),]
SASS_CCD_long = pivot_longer(data=SASS_CCD, cols=BA.NoExp:MS.20yrs, names_to='ExpAndEduc', values_to='Pay')
SASS_CCD_long = SASS_CCD_long[!(SASS_CCD_long$Pay==-8),]
SASS_CCD = SASS_CCD[!(SASS_CCD$BA.NoExp==-8),]
ed_exp_SASS_CCD = SASS_CCD[c('BA.NoExp', 'BA.10yrs', 'MS.NoExp', 'MS.30Cr', 'MS.20yrs')]
stargazer(ed_exp_SASS_CCD, type='latex', summary.stat=c('sd', 'median', 'min', 'p25', 'mean', 'p75', 'max'), title='Teacher Wages Summary Table', notes.label='', header=F)
# DEFINE FORUMLA STUFF
regressors = c('log(BA.NoExp)~', 'log(BA.10yrs)~', 'log(MS.NoExp)~', 'log(MS.30Cr)~', 'log(MS.20yrs)~')
student_vec = paste(c('HispanicStudents', 'WhiteStudents', 'BlackStudents', 'AmericanIndianStudents', 'AsianStudents', 'EligFreeLunchK.12', 'TotalEnrollment', 'PercStudEligLunchDisc'), collapse='+')
district_vec = paste(c('NumSchools', 'NumContinueTeachers', 'CoreExpendPerPupil', 'CurrExpendPerPupil', 'PercExpendInstruction', 'PercRevFederal', 'PercRevState', 'PercRevLocal', 'DistrictTotExpend', 'HispanicTeachers', 'WhiteTeachers', 'BlackTeachers', 'AmericanIndianTeachers', 'AsianTeachers', 'BenefitRateTeacher'), collapse='+')
community_vec = paste(c('REGION', 'STATE', 'RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
partial_community_vec = paste(c('RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
# ADD STUFF TO DF
SASS_CCD$UnionStrength = ifelse(SASS_CCD$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD$StateUnionRank)+1/2*(SASS_CCD$TCURINST +
SASS_CCD$TCAPOUT + SASS_CCD$TotalEmployeeBenefits)/SASS_CCD$TOTALEXP, 0)
SASS_CCD$StrongUnion = ifelse(SASS_CCD$UnionStrength > median(SASS_CCD$UnionStrength[which(SASS_CCD$UnionStrength != 0)]), 1, 0)
UnionStrength = paste(c('StrongUnion'), collapse='+')
Unionized = paste(c('UnionAgreement'), collapse="+")
# MAKE MODELS
full_lm_reg = c()
full_lm_sum = c()
full_lm_coef = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_none = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_some = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', interaction_term, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_all = lm(formula, data=SASS_CCD_long)
View(pay_reg_all)
summary(pay_reg_all)
View(pay_reg_some)
View(pay_reg_all)
# DEFINE FORUMLA STUFF
regressors = c('log(BA.NoExp)~', 'log(BA.10yrs)~', 'log(MS.NoExp)~', 'log(MS.30Cr)~', 'log(MS.20yrs)~')
student_vec = paste(c('HispanicStudents', 'WhiteStudents', 'BlackStudents', 'AmericanIndianStudents', 'AsianStudents', 'EligFreeLunchK.12', 'TotalEnrollment', 'PercStudEligLunchDisc'), collapse='+')
district_vec = paste(c('NumSchools', 'NumContinueTeachers', 'CoreExpendPerPupil', 'CurrExpendPerPupil', 'PercExpendInstruction', 'PercRevFederal', 'PercRevState', 'PercRevLocal', 'DistrictTotExpend', 'HispanicTeachers', 'WhiteTeachers', 'BlackTeachers', 'AmericanIndianTeachers', 'AsianTeachers', 'BenefitRateTeacher'), collapse='+')
community_vec = paste(c('REGION', 'STATE', 'RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
partial_community_vec = paste(c('RelatedChildreninPoverty', 'NationSizeRank', 'TotPopinDistrict', 'CEPPNationRank', 'CEPPStateRank'), collapse='+')
# ADD STUFF TO DF
SASS_CCD$UnionStrength = ifelse(SASS_CCD$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD$StateUnionRank)+1/2*(SASS_CCD$TCURINST +
SASS_CCD$TCAPOUT + SASS_CCD$TotalEmployeeBenefits)/SASS_CCD$TOTALEXP, 0)
SASS_CCD$StrongUnion = ifelse(SASS_CCD$UnionStrength > median(SASS_CCD$UnionStrength[which(SASS_CCD$UnionStrength != 0)]), 1, 0)
UnionStrength = paste(c('StrongUnion'), collapse='+')
Unionized = paste(c('UnionAgreement'), collapse="+")
# MAKE MODELS
full_lm_reg = c()
full_lm_sum = c()
full_lm_coef = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=SASS_CCD)
full_lm_reg[[regressor]] = regr.lm
full_lm_sum[[regressor]] = summary(regr.lm)
full_lm_coef[[regressor]] = coefficients(summary(regr.lm))
}
####### TRIAL ########
SASS_CCD_long$ExpAndEduc = as.factor(SASS_CCD_long$ExpAndEduc)
SASS_CCD_long$ExpAndEduc = relevel(SASS_CCD_long$ExpAndEduc, ref='BA.NoExp')
trial_reg = c('log(Pay)~')
dummy = paste(c('ExpAndEduc'), collapse='+')
interaction_term = paste(c('ExpAndEduc*StrongUnion'), collapse='+')
SASS_CCD_long$UnionStrength = ifelse(SASS_CCD_long$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD_long$StateUnionRank)+1/2*(SASS_CCD_long$TCURINST +
SASS_CCD_long$TCAPOUT + SASS_CCD_long$TotalEmployeeBenefits)/SASS_CCD_long$TOTALEXP, 0)
SASS_CCD_long$StrongUnion = ifelse(SASS_CCD_long$UnionStrength > median(SASS_CCD_long$UnionStrength[which(SASS_CCD_long$UnionStrength != 0)]), 1, 0)
formula = as.formula(paste(trial_reg, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_none = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_some = lm(formula, data=SASS_CCD_long)
formula = as.formula(paste(trial_reg, '+', dummy, '+', interaction_term, '+', UnionStrength, "+", Unionized,'+', student_vec, '+', district_vec, '+', community_vec))
pay_reg_all = lm(formula, data=SASS_CCD_long)
stargazer(pay_reg_none, pay_reg_some, pay_reg_all, type='latex', keep=c('StrongUnion', 'ExpAndEduc', 'Constant'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Union Strength Effects", notes='BA.NoExp is our base level.',notes.align='l', column.sep.width='-7pt', header=F, order=c('StrongUnion', '^ExpAndEducBA.10yrsTRUE$', '^ExpAndEducMS.NoExpTRUE$', '^ExpAndEducMS.30CrTRUE$', '^ExpAndEducMS.20yrsTRUE$', ':'))
View(pay_reg_all)
CCD99 = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/Common Core data/Clean_CCD99.csv')
CCD98 = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/Common Core data/Clean_CCD98.csv')
CCD97 = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/Common Core data/Clean_CCD97.csv')
CCD96 = read.csv('/Users/rileylatham/Downloads/Teacher_Union_Research/Data_Pool/Common Core data/Clean_CCD96.csv')
SASS_CCD99 = merge(SASS_CCD, CCD99, by.x="CCDIDLEA", by.y="LEAID")
SASS_CCD98 = merge(SASS_CCD, CCD98, by.x="CCDIDLEA", by.y="LEAID")
SASS_CCD97 = merge(SASS_CCD, CCD97, by.x="CCDIDLEA", by.y="LEAID")
SASS_CCD96 = merge(SASS_CCD, CCD96, by.x="CCDIDLEA", by.y="LEAID")
# 99
SASS_CCD99$UnionStrength99 = ifelse(SASS_CCD99$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD99$StateUnionRank)+1/2*(SASS_CCD99$TCURINST.y +
SASS_CCD99$TCAPOUT.y + SASS_CCD99$TotalEmployeeBenefits.y)/SASS_CCD99$TOTALEXP.y, 0)
SASS_CCD99$StrongUnion99 = ifelse(SASS_CCD99$UnionStrength > median(SASS_CCD99$UnionStrength[which(SASS_CCD99$UnionStrength != 0)]), 1, 0)
SASS_CCD99$DeltaStrength = abs(SASS_CCD99$UnionStrength - SASS_CCD99$UnionStrength99)
# 98
SASS_CCD98$UnionStrength98 = ifelse(SASS_CCD98$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD98$StateUnionRank)+1/2*(SASS_CCD98$TCURINST.y +
SASS_CCD98$TCAPOUT.y + SASS_CCD98$TotalEmployeeBenefits.y)/SASS_CCD98$TOTALEXP.y, 0)
SASS_CCD98$StrongUnion98 = ifelse(SASS_CCD98$UnionStrength > median(SASS_CCD98$UnionStrength[which(SASS_CCD98$UnionStrength != 0)]), 1, 0)
SASS_CCD98$DeltaStrength = abs(SASS_CCD98$UnionStrength - SASS_CCD98$UnionStrength98)
# 97
SASS_CCD97$UnionStrength97 = ifelse(SASS_CCD97$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD97$StateUnionRank)+1/2*(SASS_CCD97$TCURINST.y +
SASS_CCD97$TCAPOUT.y + SASS_CCD97$TotalEmployeeBenefits.y)/SASS_CCD97$TOTALEXP.y, 0)
SASS_CCD97$StrongUnion97 = ifelse(SASS_CCD97$UnionStrength > median(SASS_CCD97$UnionStrength[which(SASS_CCD97$UnionStrength != 0)]), 1, 0)
SASS_CCD97$DeltaStrength = abs(SASS_CCD97$UnionStrength - SASS_CCD97$UnionStrength97)
# 96
SASS_CCD96$UnionStrength96 = ifelse(SASS_CCD96$UnionAgreement != -8, 1/2*(1-0.2*SASS_CCD96$StateUnionRank)+1/2*(SASS_CCD96$TCURINST.y +
SASS_CCD96$TCAPOUT.y + SASS_CCD96$TotalEmployeeBenefits.y)/SASS_CCD96$TOTALEXP.y, 0)
SASS_CCD96$StrongUnion96 = ifelse(SASS_CCD96$UnionStrength > median(SASS_CCD96$UnionStrength[which(SASS_CCD96$UnionStrength != 0)]), 1, 0)
SASS_CCD96$DeltaStrength = abs(SASS_CCD96$UnionStrength - SASS_CCD96$UnionStrength96)
# Example plotting for appendix piece on simultaneity
p = ggplot(data=SASS_CCD96, mapping = aes(UnionStrength96, UnionStrength, color=REGION))
#p + geom_point() + geom_abline(a=0, b=1)
#summary(which(!is.na(SASS_CCD99$DeltaStrength)))
####### IV SEP LINE ########
# Create our IV dummy and interaction term
test_IV = merge(SASS_CCD, SASS_CCD96[,c('StateSizeRank', 'CCDIDLEA')], by='CCDIDLEA')
first_stage_reg = paste(c('UnionStrength~'), collapse='+')
IV_reg = paste(c('StateSizeRank.y'), collapse='+')
formula = as.formula(paste(first_stage_reg, '+', IV_reg,'+', student_vec, '+', district_vec, '+', community_vec))
first_stage_ols = lm(formula, data=test_IV)
test_IV$IV_hat = NULL
test_IV$IV_hat = predict(first_stage_ols, newdata = test_IV, na.action=na.omit)
test_IV$StrongUnionIV = ifelse(test_IV$IV_hat > median(test_IV$IV_hat[which(test_IV$IV_hat != 0)]), 1, 0)
IV = paste(c('StrongUnionIV'), collapse='+')
second_stage_testreg = paste(c('log(BA.NoExp)~'), collapse='+')
second_stage_formula = as.formula(paste(second_stage_testreg,'+', IV, '+', student_vec, '+', district_vec, '+', community_vec))
second_stage_ols = lm(second_stage_formula, data=test_IV)
IV_regs = c()
for (regressor in regressors){
formula = as.formula(paste(regressor,'+', IV, '+', student_vec,
'+', district_vec, '+', community_vec))
regr.lm = lm(formula, data=test_IV)
IV_regs[[regressor]] = regr.lm
}
stargazer(IV_regs[1], IV_regs[2], IV_regs[3], IV_regs[4], IV_regs[5], type='latex', keep='StrongUnion', digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Instrumental Variable Summary Statistics", notes.label='', column.sep.width = '-7pt')
# Getting 96 ready
SASS_CCD96_long = pivot_longer(data=SASS_CCD96, cols=BA.NoExp:MS.20yrs, names_to='ExpAndEduc', values_to='Pay')
SASS_CCD96_long$ExpAndEduc = as.factor(SASS_CCD96_long$ExpAndEduc)
SASS_CCD96_long$ExpAndEduc = relevel(SASS_CCD96_long$ExpAndEduc, ref='BA.NoExp')
SASS_CCD96_long = SASS_CCD96_long[!(SASS_CCD96_long$Pay==-8),]
# Create our IV dummy and interaction term
dummy_IV = paste(c('ExpAndEduc'), collapse='+')
interaction_term_IV = paste(c('ExpAndEduc*StrongUnionIV'), collapse='+')
pay_IV = merge(SASS_CCD_long, SASS_CCD96_long[,c('StateSizeRank', 'CCDIDLEA')], by='CCDIDLEA')
first_stage_reg = paste(c('UnionStrength~'), collapse='+')
IV_reg = paste(c('StateSizeRank.y'), collapse='+')
formula = as.formula(paste(first_stage_reg, '+', IV_reg,'+', student_vec, '+', district_vec, '+', community_vec))
first_stage_ols = lm(formula, data=test_IV)
pay_IV$pay_IV_hat = NULL
pay_IV$pay_IV_hat = predict(first_stage_ols, newdata = pay_IV, na.action=na.omit)
pay_IV$StrongUnionIV = ifelse(pay_IV$pay_IV_hat > median(pay_IV$pay_IV_hat[which(pay_IV$pay_IV_hat != 0)]), 1, 0)
IV = paste(c('StrongUnionIV'), collapse='+')
second_stage_pay = paste(c('log(Pay)~'), collapse='+')
second_stage_pay_formula = as.formula(paste(second_stage_pay,'+', IV, '+', dummy_IV,'+', interaction_term_IV,'+', student_vec, '+', district_vec, '+', community_vec))
second_stage_pay_ols = lm(second_stage_pay_formula, data=pay_IV)
## Relevancy Check
rel_reg = lm(UnionStrength~StateSizeRank, data=SASS_CCD96_long)
stargazer(second_stage_pay_ols, type='latex', keep=c('StrongUnionIV'), digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Instrumental Variable Summary Statistics", notes='BA.NoExp is our base level.', notes.align = 'l', column.sep.width = '-7pt', header=F)
stargazer(rel_reg, type='latex', digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Instrumental Variable Summary Statistics", notes.align = 'l', column.sep.width = '-7pt', header=F)
stargazer(rel_reg, type='latex', digits=4, omit.stat=c('f', 'rsq', 'ser'), title="Weak Instrument Test", notes.align = 'l', column.sep.width = '-7pt', header=F)
knitr::opts_chunk$set(echo = TRUE)
library(sandwich)
library(ggplot2)
library(tidyverse)
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.) +
scale(1)
p_den= sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
knitr::opts_chunk$set(echo = TRUE)
library(sandwich)
library(ggplot2)
library(tidyverse)
# Init Variables
set.seed(42)
num_reps=1000
dist_list_2 = list(function(n) rnorm(n),
function(n) rcauchy(n))
param_list_2 = expand.grid(reps=1:num_reps, n=c(10,100,1000),
distro = c("Norm", "Cauchy"))
# Function Builds
sim_func_2 = function(reps,n,distro) {
dgp = tibble(err = dist_list_2[[distro]](n),
xx = rnorm(n),
y = 0.9 + 0.5*xx + err)
mod = lm(y~xx, data=dgp)
return(list(beta=coefficients(mod)[2]))
}
## Run simulation
sim_out_2 = param_list_2 %>%
mutate(results=pmap(param_list_2,sim_func_2)) %>%
mutate(sqrtn=sqrt(n)) %>%
unnest_wider(results)
sim_print_2 = group_by(sim_out_2,n,distro) %>%
mutate(mean_beta=mean(beta),sd_beta=sd(beta)) %>%
ungroup() %>%
select(n,distro,mean_beta,sd_beta) %>%
distinct() %>%
pivot_wider(names_from=distro, values_from=c(mean_beta,sd_beta))
p_den= sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.) +
scale(1)
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.) +
scale(beta)
p_den= sim_out_2 %>%
ggplot(aes(x=beta, fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.) +
scale(beta)
p_den= sim_out_2 %>%
ggplot(aes(x=beta, y=..scaled.., fill=sqrtn, group=n)) +
geom_density() +
xlim(c(-5,5))
# Add mean line
p_den + geom_vline(aes(xintercept=0.5),
color="blue", linetype="dashed", size=1) +
facet_grid(distro~.)
setwd("~/PhD TextBooks and Coursework/ECN240A/Homework 4")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sandwich)
library(broom)
# Instantiate Variables
set.seed(42)
num_reps = 100
# Function to build data and grab results
sim_func <- function(rep,n,J,b1){
df <-tibble(err = rchisq(n, df=J)-J,
x1=rnorm(n=n,mean=0,sd=1),
y = x1*b1+err)
reg <- lm(y~x1, data=df)
results <- list(beta1=coefficients(reg)[2],
var_beta1=vcovHC(reg, type="const")[2,2])
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(25,100), J=1, b1=0)
sim_out <- param_list %>%
mutate(results = pmap(param_list, sim_func)) %>%
unnest_wider(results) %>%
group_by(n,J,b1) %>%
mutate(test_b1=abs(beta1/sqrt(var_beta1)>1.96)) %>%
mutate(prob_reject=mean(test_b1)) %>%
mutate(asy_power=pnorm(-1.96-sqrt(n)*b1/(1/J))+pnorm(sqrt(n)*b1/(1/J)-1.96)) %>%
ungroup() %>%
select(n,J,b1,prob_reject,asy_power) %>%
distinct()
sim_out
pl_power_q1 <- sim_out %>%
filter(J==0.5) %>%
mutate(sample= case_when( n==25 ~ "n=25", n==100 ~ "n=100")) %>%
mutate(asy_power=pnorm(-1.96-sqrt(n)*b1/(1/J))+pnorm(sqrt(n)*b1/(1/J)-1.96))%>%
ggplot() +
geom_line(aes(x=b1,y=prob_reject,group=sample,color=sample)) +
geom_line(aes(x=b1,y=asy_power,group=sample,color="Asymptotic"))  +
theme_minimal()
pl_power_q1
pl_power_q1 <- sim_out %>%
filter(J==1) %>%
mutate(sample= case_when( n==25 ~ "n=25", n==100 ~ "n=100")) %>%
mutate(asy_power=pnorm(-1.96-sqrt(n)*b1/(1/J))+pnorm(sqrt(n)*b1/(1/J)-1.96))%>%
ggplot() +
geom_line(aes(x=b1,y=prob_reject,group=sample,color=sample)) +
geom_line(aes(x=b1,y=asy_power,group=sample,color="Asymptotic"))  +
theme_minimal()
pl_power_q1
# Instantiate Variables
set.seed(42)
num_reps = 100
# Function to build data and grab results
sim_func <- function(rep,n,J,b1){
df <-tibble(err = rchisq(n, df=J)-J,
x1=rnorm(n=n,mean=0,sd=1),
y = x1*b1+err)
reg <- lm(y~x1, data=df)
results <- list(beta1=coefficients(reg)[2],
var_beta1=vcovHC(reg, type="const")[2,2])
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(25,100), J=c(1,5),
b1=c(2/(n^(0.4)), 2/(n^(0.5)), 2/(n^(0.6))))
# Instantiate Variables
set.seed(42)
num_reps = 100
# Function to build data and grab results
sim_func <- function(rep,n,J,b1){
df <-tibble(err = rchisq(n, df=J)-J,
x1=rnorm(n=n,mean=0,sd=1),
y = x1*b1+err)
reg <- lm(y~x1, data=df)
results <- list(beta1=coefficients(reg)[2],
var_beta1=vcovHC(reg, type="const")[2,2])
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(25,100), J=c(1,5),
b1=c(2/(100^(0.4)), 2/(100^(0.5)), 2/(100^(0.6))))
sim_out <- param_list %>%
mutate(results = pmap(param_list, sim_func)) %>%
unnest_wider(results) %>%
group_by(n,J,b1) %>%
mutate(test_b1=abs(beta1/sqrt(var_beta1)>1.96)) %>%
mutate(prob_reject=mean(test_b1)) %>%
mutate(asy_power=pnorm(-1.96-sqrt(n)*b1/(1/J))+pnorm(sqrt(n)*b1/(1/J)-1.96)) %>%
ungroup() %>%
select(n,J,b1,prob_reject,asy_power) %>%
distinct()
sim_out
# Instantiate Variables
set.seed(42)
num_reps = 500
# Function to build data and grab results
sim_func <- function(rep,n,J,b1){
df <-tibble(err = rchisq(n, df=J)-J,
x1=rnorm(n=n,mean=0,sd=1),
y = x1*b1+err)
reg <- lm(y~x1, data=df)
results <- list(beta1=coefficients(reg)[2],
var_beta1=vcovHC(reg, type="const")[2,2])
return(results)
}
## Parameter Settings
param_list <- expand.grid(rep=1:num_reps, n=c(25,100), J=c(1,5),
b1=c(2/(100^(0.4)), 2/(100^(0.5)), 2/(100^(0.6))))
sim_out <- param_list %>%
mutate(results = pmap(param_list, sim_func)) %>%
unnest_wider(results) %>%
group_by(n,J,b1) %>%
mutate(test_b1=abs(beta1/sqrt(var_beta1)>1.96)) %>%
mutate(prob_reject=mean(test_b1)) %>%
mutate(asy_power=pnorm(-1.96-sqrt(n)*b1/(1/J))+pnorm(sqrt(n)*b1/(1/J)-1.96)) %>%
ungroup() %>%
select(n,J,b1,prob_reject,asy_power) %>%
distinct()
sim_out
